#Deobfusce DopplelDridex
# Simply Python script to decode an array of integers that require a subtraction operation. Helpful to de-obfuscate strings in macros in DoppelDridex campaigns from September 2021.

#Set the integers as an array
numbers = [1082 , 1055 , 1090 , 1101 , 1089 , 1106 , 1111 , 1102 , 1091 , 1054 , 1126 , 1138 , 1131 , 1130 , 1084 , 1035 , 1032 , 1082 , 1126 , 1138 , 1131 , 1130 , 1084 , 1035 , 1032 , 1082 , 1126 , 1123 , 1119 , 1122 , 1084 , 1035 , 1032 , 1082 , 1094 , 1106 , 1087 , 1080 , 1087 , 1102 , 1102 , 1098 , 1095 , 1089 , 1087 , 1106 , 1095 , 1101 , 1100 , 1054 , 1095 , 1090 , 1083 , 1056 , 1089 , 1105 , 1056 , 1035 , 1032 , 1087 , 1102 , 1102 , 1098 , 1095 , 1089 , 1087 , 1106 , 1095 , 1101 , 1100 , 1100 , 1087 , 1099 , 1091 , 1083 , 1056 , 1106 , 1123 , 1137 , 1138 , 1056 , 1035 , 1032 , 1109 , 1095 , 1100 , 1090 , 1101 , 1109 , 1105 , 1106 , 1087 , 1106 , 1091 , 1083 , 1056 , 1131 , 1127 , 1132 , 1127 , 1131 , 1127 , 1144 , 1123 , 1056 , 1035 , 1032 , 1099 , 1087 , 1110 , 1095 , 1099 , 1095 , 1112 , 1091 , 1088 , 1107 , 1106 , 1106 , 1101 , 1100 , 1083 , 1056 , 1132 , 1133 , 1056 , 1035 , 1032 , 1099 , 1095 , 1100 , 1095 , 1099 , 1095 , 1112 , 1091 , 1088 , 1107 , 1106 , 1106 , 1101 , 1100 , 1083 , 1056 , 1132 , 1133 , 1056 , 1035 , 1032 , 1089 , 1087 , 1102 , 1106 , 1095 , 1101 , 1100 , 1083 , 1056 , 1132 , 1133 , 1056 , 1035 , 1032 , 1105 , 1094 , 1101 , 1109 , 1095 , 1100 , 1106 , 1087 , 1105 , 1097 , 1088 , 1087 , 1104 , 1083 , 1056 , 1132 , 1133 , 1056 , 1084 , 1035 , 1032 , 1082 , 1137 , 1121 , 1136 , 1127 , 1134 , 1138 , 1054 , 1138 , 1143 , 1134 , 1123 , 1083 , 1056 , 1138 , 1123 , 1142 , 1138 , 1069 , 1140 , 1120 , 1137 , 1121 , 1136 , 1127 , 1134 , 1138 , 1056 , 1054 , 1098 , 1087 , 1100 , 1093 , 1107 , 1087 , 1093 , 1091 , 1083 , 1056 , 1108 , 1088 , 1105 , 1121 , 1136 , 1127 , 1134 , 1138 , 1056 , 1054 , 1084 , 1035 , 1032 , 1061 , 1136 , 1139 , 1106 , 1129 , 1099 , 1103 , 1119 , 1110 , 1142 , 1096 , 1131 , 1101 , 1093 , 1090 , 1102 , 1104 , 1122 , 1127 , 1121 , 1077 , 1076 , 1143 , 1136 , 1079 , 1103 , 1132 , 1054 , 1097 , 1136 , 1110 , 1107 , 1093 , 1103 , 1108 , 1073 , 1101 , 1105 , 1071 , 1128 , 1073 , 1142 , 1112 , 1073 , 1105 , 1119 , 1136 , 1104 , 1141 , 1100 , 1089 , 1133 , 1035 , 1032 , 1061 , 1095 , 1092 , 1126 , 1092 , 1119 , 1108 , 1139 , 1074 , 1129 , 1098 , 1100 , 1096 , 1091 , 1140 , 1088 , 1126 , 1126 , 1103 , 1100 , 1102 , 1138 , 1088 , 1102 , 1077 , 1099 , 1140 , 1134 , 1109 , 1128 , 1130 , 1102 , 1137 , 1131 , 1089 , 1096 , 1071 , 1126 , 1138 , 1077 , 1070 , 1071 , 1079 , 1131 , 1099 , 1088 , 1137 , 1097 , 1089 , 1101 , 1078 , 1093 , 1070 , 1035 , 1032 , 1061 , 1119 , 1071 , 1127 , 1105 , 1096 , 1139 , 1112 , 1101 , 1095 , 1098 , 1108 , 1098 , 1110 , 1095 , 1140 , 1135 , 1097 , 1098 , 1087 , 1089 , 1094 , 1138 , 1108 , 1091 , 1070 , 1122 , 1137 , 1103 , 1097 , 1090 , 1136 , 1098 , 1133 , 1127 , 1078 , 1073 , 1119 , 1106 , 1141 , 1090 , 1130 , 1134 , 1090 , 1107 , 1078 , 1125 , 1035 , 1032 , 1061 , 1090 , 1104 , 1106 , 1096 , 1141 , 1111 , 1122 , 1128 , 1144 , 1101 , 1132 , 1125 , 1054 , 1104 , 1129 , 1110 , 1111 , 1140 , 1137 , 1070 , 1088 , 1070 , 1126 , 1104 , 1101 , 1078 , 1073 , 1143 , 1087 , 1122 , 1071 , 1091 , 1109 , 1111 , 1128 , 1088 , 1123 , 1102 , 1121 , 1070 , 1144 , 1123 , 1127 , 1141 , 1075 , 1099 , 1091 , 1130 , 1101 , 1127 , 1078 , 1035 , 1032 , 1061 , 1141 , 1129 , 1134 , 1136 , 1074 , 1074 , 1139 , 1134 , 1119 , 1077 , 1095 , 1100 , 1106 , 1079 , 1143 , 1120 , 1137 , 1142 , 1112 , 1092 , 1089 , 1089 , 1090 , 1138 , 1099 , 1070 , 1090 , 1103 , 1103 , 1112 , 1139 , 1131 , 1090 , 1089 , 1074 , 1120 , 1077 , 1090 , 1125 , 1075 , 1122 , 1091 , 1095 , 1102 , 1138 , 1099 , 1128 , 1035 , 1032 , 1109 , 1127 , 1138 , 1126 , 1054 , 1089 , 1136 , 1123 , 1119 , 1138 , 1123 , 1101 , 1120 , 1128 , 1123 , 1121 , 1138 , 1062 , 1056 , 1109 , 1137 , 1121 , 1136 , 1127 , 1134 , 1138 , 1068 , 1105 , 1126 , 1123 , 1130 , 1130 , 1056 , 1063 , 1035 , 1032 , 1054 , 1054 , 1054 , 1054 , 1068 , 1091 , 1142 , 1123 , 1121 , 1062 , 1056 , 1141 , 1131 , 1127 , 1121 , 1054 , 1134 , 1136 , 1133 , 1121 , 1123 , 1137 , 1137 , 1054 , 1121 , 1119 , 1130 , 1130 , 1054 , 1121 , 1136 , 1123 , 1119 , 1138 , 1123 , 1054 , 1056 , 1054 , 1060 , 1054 , 1089 , 1126 , 1136 , 1062 , 1073 , 1074 , 1063 , 1054 , 1060 , 1054 , 1056 , 1136 , 1139 , 1132 , 1122 , 1130 , 1130 , 1073 , 1072 , 1068 , 1123 , 1142 , 1123 , 1054 , 1089 , 1080 , 1114 , 1114 , 1102 , 1136 , 1133 , 1125 , 1136 , 1056 , 1054 , 1060 , 1054 , 1056 , 1119 , 1131 , 1090 , 1119 , 1138 , 1119 , 1114 , 1122 , 1123 , 1124 , 1122 , 1133 , 1121 , 1068 , 1134 , 1056 , 1054 , 1060 , 1054 , 1056 , 1132 , 1125 , 1054 , 1056 , 1054 , 1060 , 1054 , 1056 , 1092 , 1127 , 1130 , 1138 , 1123 , 1136 , 1089 , 1136 , 1123 , 1119 , 1138 , 1123 , 1056 , 1054 , 1060 , 1054 , 1089 , 1126 , 1136 , 1062 , 1073 , 1074 , 1063 , 1054 , 1063 , 1035 , 1032 , 1091 , 1132 , 1122 , 1054 , 1109 , 1127 , 1138 , 1126 , 1054 , 1061 , 1103 , 1078 , 1129 , 1135 , 1075 , 1091 , 1141 , 1103 , 1127 , 1126 , 1107 , 1131 , 1141 , 1093 , 1097 , 1100 , 1124 , 1137 , 1134 , 1144 , 1093 , 1075 , 1107 , 1073 , 1130 , 1092 , 1132 , 1122 , 1072 , 1137 , 1110 , 1105 , 1141 , 1143 , 1101 , 1119 , 1123 , 1109 , 1129 , 1139 , 1074 , 1054 , 1091 , 1131 , 1123 , 1120 , 1102 , 1132 , 1100 , 1112 , 1074 , 1054 , 1071 , 1035 , 1032 , 1061 , 1111 , 1131 , 1122 , 1072 , 1137 , 1130 , 1078 , 1135 , 1077 , 1123 , 1141 , 1112 , 1075 , 1120 , 1075 , 1070 , 1126 , 1094 , 1092 , 1097 , 1103 , 1108 , 1092 , 1109 , 1100 , 1119 , 1122 , 1142 , 1093 , 1119 , 1095 , 1107 , 1076 , 1072 , 1104 , 1125 , 1137 , 1106 , 1101 , 1098 , 1106 , 1133 , 1100 , 1077 , 1072 , 1107 , 1143 , 1094 , 1125 , 1128 , 1097 , 1079 , 1074 , 1109 , 1105 , 1054 , 1099 , 1106 , 1094 , 1035 , 1032 , 1061 , 1140 , 1119 , 1071 , 1102 , 1097 , 1092 , 1112 , 1135 , 1097 , 1143 , 1142 , 1078 , 1077 , 1134 , 1072 , 1103 , 1128 , 1091 , 1104 , 1130 , 1103 , 1079 , 1127 , 1078 , 1098 , 1094 , 1110 , 1136 , 1119 , 1131 , 1099 , 1110 , 1121 , 1131 , 1079 , 1119 , 1071 , 1078 , 1094 , 1129 , 1124 , 1110 , 1136 , 1088 , 1094 , 1134 , 1094 , 1070 , 1101 , 1090 , 1134 , 1035 , 1032 , 1061 , 1104 , 1135 , 1095 , 1071 , 1106 , 1132 , 1072 , 1120 , 1103 , 1111 , 1102 , 1110 , 1101 , 1075 , 1054 , 1120 , 1097 , 1138 , 1120 , 1132 , 1143 , 1141 , 1112 , 1132 , 1073 , 1122 , 1130 , 1090 , 1103 , 1089 , 1138 , 1077 , 1121 , 1128 , 1140 , 1120 , 1071 , 1095 , 1104 , 1112 , 1144 , 1111 , 1100 , 1070 , 1138 , 1106 , 1035 , 1032 , 1061 , 1129 , 1112 , 1128 , 1075 , 1127 , 1109 , 1138 , 1122 , 1144 , 1141 , 1132 , 1134 , 1143 , 1101 , 1104 , 1120 , 1075 , 1079 , 1111 , 1107 , 1074 , 1110 , 1087 , 1134 , 1135 , 1089 , 1124 , 1121 , 1120 , 1144 , 1139 , 1142 , 1094 , 1094 , 1144 , 1144 , 1073 , 1072 , 1091 , 1123 , 1136 , 1112 , 1109 , 1105 , 1054 , 1138 , 1098 , 1112 , 1127 , 1088 , 1144 , 1137 , 1101 , 1070 , 1110 , 1097 , 1123 , 1104 , 1106 , 1035 , 1032 , 1061 , 1075 , 1094 , 1101 , 1078 , 1074 , 1144 , 1089 , 1075 , 1136 , 1134 , 1091 , 1071 , 1106 , 1091 , 1127 , 1123 , 1140 , 1097 , 1134 , 1120 , 1141 , 1141 , 1103 , 1078 , 1142 , 1088 , 1119 , 1144 , 1102 , 1090 , 1075 , 1142 , 1141 , 1089 , 1123 , 1140 , 1140 , 1137 , 1075 , 1123 , 1099 , 1090 , 1106 , 1110 , 1139 , 1072 , 1121 , 1091 , 1089 , 1099 , 1122 , 1106 , 1035 , 1032 , 1082 , 1069 , 1137 , 1121 , 1136 , 1127 , 1134 , 1138 , 1084 , 1035 , 1032 , 1082 , 1069 , 1126 , 1123 , 1119 , 1122 , 1084 , 1035 , 1032 , 1082 , 1120 , 1133 , 1122 , 1143 , 1084 , 1035 , 1032 , 1082 , 1069 , 1120 , 1133 , 1122 , 1143 , 1084 , 1035 , 1032 , 1082 , 1069 , 1126 , 1138 , 1131 , 1130 , 1084]

#loop through the integers. Subtract the required amount, then convert from decimal to ascii
for i in range (len(numbers)): 
	numbers[i]=chr(numbers[i] - 1022)
print ("".join(numbers)) 
